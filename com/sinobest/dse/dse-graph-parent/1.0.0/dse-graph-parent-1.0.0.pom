<!--

         Copyright (C) 2012-2016 DataStax Inc.

         This software can be used solely with DataStax Enterprise. Please consult the license at
         http://www.datastax.com/terms/datastax-dse-driver-license-terms

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>com.sinobest.dse</groupId>
    <artifactId>dse-graph-parent</artifactId>
    <version>1.0.0</version>

    <modules>
        <module>java-dse-graph</module>
    </modules>

    <name>dse-graph-parent_${project.version}</name>

    <!--<parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
        <relativePath/>
    </parent>-->

    <!--@formatter:off-->
    <description>An implementation of the Apache TinkerPop graph computing framework for DSE Graph.</description>
    <!--@formatter:on-->


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk-version>1.8</jdk-version>
        <maven.version>3.3.9</maven.version>

        <github.global.server>github</github.global.server>

        <sinobest.framework.version>1.0.0</sinobest.framework.version>
        <cassandra.version>5.0.3</cassandra.version>
        <java-driver.version>3.3.2</java-driver.version>
        <dse-driver.version>1.2.2</dse-driver.version>
        <dse-graph-driver.version>1.6.7</dse-graph-driver.version>

        <tinkerpop.version>3.3.2</tinkerpop.version>

        <slf4j-api.version>1.7.13</slf4j-api.version>
        <guava.version>16.0.1</guava.version>
        <snappy.version>1.0.5</snappy.version>
        <lz4.version>1.2.0</lz4.version>
        <hdr.version>2.1.4</hdr.version>
        <jackson.version>2.5.3</jackson.version>
        <esri.version>1.2.1</esri.version>
        <jackson.version>2.5.3</jackson.version>
        <joda.version>2.9.1</joda.version>
        <jsr353-api.version>1.0</jsr353-api.version>
        <felix.version>4.6.0</felix.version>
        <testng.version>6.8.8</testng.version>
        <assertj.version>1.7.0</assertj.version>
        <mockito.version>1.10.19</mockito.version>
        <commons-exec.version>1.3</commons-exec.version>
        <scassandra.version>0.11.0</scassandra.version>
        <apacheds.version>2.0.0-M19</apacheds.version>
        <ldapcodec.version>1.0.0-M26</ldapcodec.version>
        <currentYear>2016</currentYear>
        <ipprefix>127.0.1.</ipprefix>
        <test.groups>unit</test.groups>
        <ccm.java.home>none</ccm.java.home>
        <main.basedir>${project.basedir}</main.basedir>
    </properties>

    <dependencyManagement>

        <dependencies>
            <!-- Reactor projects -->

            <!-- framework-ssh -->
            <dependency>
                <groupId>com.sinobest</groupId>
                <artifactId>framework-core</artifactId>
                <version>${sinobest.framework.version}</version>
            </dependency>

            <!-- dse-driver -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>dse-driver</artifactId>
                <version>${dse-driver.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>dse-driver</artifactId>
                <version>${dse-driver.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>dse-driver</artifactId>
                <version>${dse-driver.version}</version>
                <classifier>javadoc-resources</classifier>
            </dependency>

            <dependency>
                <groupId>com.datastax.dse</groupId>
                <artifactId>dse-java-driver-graph</artifactId>
                <version>${dse-graph-driver.version}</version>
            </dependency>

            <!-- Compile scope dependencies -->
            <!-- cassandra-driver-core -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${java-driver.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${java-driver.version}</version>
                <classifier>sources</classifier>
            </dependency>

            <!-- java-dse-graph -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>java-dse-graph</artifactId>
                <version>1.0.0-beta1</version>
            </dependency>

            <!-- Apache Tinkerpop -->
            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>gremlin-groovy</artifactId>
                <version>${tinkerpop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tinkerpop</groupId>
                        <artifactId>gremlin-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>gremlin-core</artifactId>
                <version>${tinkerpop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>tinkergraph-gremlin</artifactId>
                <version>${tinkerpop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>neo4j-gremlin</artifactId>
                <version>${tinkerpop.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>gremlin-console</artifactId>
                <version>${tinkerpop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>gremlin-server</artifactId>
                <version>${tinkerpop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tinkerpop</groupId>
                <artifactId>tinkerpop</artifactId>
                <version>${tinkerpop.version}</version>
            </dependency>


            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esri.geometry</groupId>
                <artifactId>esri-geometry-api</artifactId>
                <version>${esri.version}</version>
            </dependency>

            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>
            <dependency>
                <groupId>net.jpountz.lz4</groupId>
                <artifactId>lz4</artifactId>
                <version>${lz4.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.hdrhistogram</groupId>
                <artifactId>HdrHistogram</artifactId>
                <version>${hdr.version}</version>
            </dependency>


            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>dse-driver</artifactId>
                <version>${dse-driver.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${java-driver.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.scassandra</groupId>
                <artifactId>java-client</artifactId>
                <version>${scassandra.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-exec</artifactId>
                <version>${commons-exec.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j-api.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-core</artifactId>
                <version>${apacheds.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-protocol-kerberos</artifactId>
                <version>${apacheds.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-interceptor-kerberos</artifactId>
                <version>${apacheds.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-protocol-ldap</artifactId>
                <version>${apacheds.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-ldif-partition</artifactId>
                <version>${apacheds.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.server</groupId>
                <artifactId>apacheds-jdbm-partition</artifactId>
                <version>${apacheds.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.directory.api</groupId>
                <artifactId>api-ldap-codec-standalone</artifactId>
                <version>${ldapcodec.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <finalName>dse-graph-parent-${project.version}</finalName>

        <plugins>
            <!-- Maven github -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message>
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <branch>refs/heads/master</branch>
                    <includes>
                        <include>**</include>
                    </includes>
                    <!-- <path>com.sinobest.kshfx</path>-->
                    <!-- 是否与当前树合并，或者完全替换提交指向的树, 默认为false-->
                    <merge>true</merge>
                    <!-- 是否强制进行一个ref更新，默认情况下只会快速前进 -->
                    <force>true</force>
                    <!-- 在该站点的根目录下是否总是创造一个.nojekyll文件将。如果您的站点包含任何以下划线开头的文件夹，那么该设置应该启用。-->
                    <noJekyll>true</noJekyll>
                    <!-- 对应github上创建的仓库名称 name -->
                    <repositoryName>maven-repo</repositoryName>
                    <!-- github 仓库所有者 -->
                    <repositoryOwner>v4liulv</repositoryOwner>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven deploy 结合上面的Maven-github将本地工程的部署到远程Maven Github仓库-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <!-- Maven Enforcer Plugin 定义一些必须遵守的配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Java 编译-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${jdk-version}</source>
                    <target>${jdk-version}</target>
                </configuration>
            </plugin>
            <!-- Maven 生成sources源码包的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>create-source-jar</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven 生成javadoc文档包的插件，解决报错添加-Xdoclint:none-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.2</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- build-helper-maven-plugin插件来支持自定义的项目目录结构(相对于Maven默认目录结构来说)。 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <!-- maven-jar-plugin 默认的打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- Maven 生成全部的依赖包到target\lib目录下 -->
            <!-- ${project.build.directory}为Maven内置变量，缺省为target -->
            <!-- excludeTransitive表示是否不包含间接依赖的包  -->
            <!-- stripVersion表示复制的jar文件去掉版本信息 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven 打包全部的依赖类都打包到源代码中，需要注释掉maven-dependency-plugin和maven-jar-plugin的方式 -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.defonds.RsaEncryptor</mainClass>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <!-- Maven install 将项目输出构件安装到本地仓库  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <!-- mvn clean命令清除target里的内容的同时，也清除work,checkpoint,lib_managed等下的相应目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>work</directory>
                        </fileset>
                        <fileset>
                            <directory>checkpoint</directory>
                        </fileset>
                        <fileset>
                            <directory>lib_managed</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>alibaba-opensource</id>
            <name>local private alibaba-opensource</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- 本地版本库 -->
        <repository>
            <id>maven-local</id>
            <url>D:\libs\maven\</url>
        </repository>

        <!-- liulv的GitHub版本库 -->
        <repository>
            <id>maven-repo-master</id>
            <url>https://raw.githubusercontent.com/v4liulv/maven-repo/master</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
<!--
    <profiles>

        <profile>
            <id>short</id>
            <properties>
                <env>default</env>
                <test.groups>unit,short</test.groups>
            </properties>
        </profile>

        <profile>
            <id>long</id>
            <properties>
                <env>default</env>
                <test.groups>unit,short,long</test.groups>
            </properties>
        </profile>

    </profiles>-->

    <!--<licenses>
        <license>
            <name>DataStax DSE Driver License</name>
            <url>http://www.datastax.com/terms/datastax-dse-driver-license-terms</url>
            <distribution>repo</distribution>
            <comments/>
        </license>
    </licenses>-->

   <!-- <scm>
        <connection>scm:git:git@github.com:datastax/java-dse-graph.git</connection>
        <developerConnection>scm:git:git@github.com:datastax/java-dse-graph.git</developerConnection>
        <url>https://github.com/datastax/java-dse-graph</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Various</name>
            <organization>DataStax</organization>
        </developer>
    </developers>
    -->



</project>