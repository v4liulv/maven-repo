<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
          http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--maven2.0必须是这样写，现在是maven2唯一支持的版本 -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sinobest.kshfx</groupId> <!--指定组名,例如：org.apache.maven -->
    <artifactId>kshfx-parent</artifactId><!-- 项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称 -->
    <version>0.1.0</version> <!--指定Maven工程版本号，用于版本控制 -->
    <modules>
       <!--
        <module>core</module>
        <module>hbase</module>
        <module>ssh</module>
        <module>neo4j</module>
        <module>mapreduce</module>
        <module>hive</module>
        <module>spark</module>
        <module>titan</module>-->
    </modules>
    <packaging>pom</packaging><!--修改打包方式--> <!--The current core packaging values are: pom,jar, maven-plugin, ejb, war, ear, rar, par -->
    <name>kshfx-perent_${project.version}</name><!--指定工程名例如：app --> <!--一些无关太重要的东西，用户描述你的项目的名字,可选的 -->
    <url>http://maven.apache.org</url><!--Maven官方网站地址 -->
    <description>kshfx-master</description><!-- project的描述 -->
    <inceptionYear>2017年6月5日</inceptionYear> <!-- 工程的初始时间 -->
    <licenses/><!--列出本工程直接的licenses，而不要列出dependencies的licenses -->

    <properties>
        <github.global.server>github</github.global.server>
        <jdk-version>1.8</jdk-version>
        <maven.version>3.3.9</maven.version>
        <model-version>4.0.0</model-version>
        <!-- Maven jar包对应版本号-->
        <project.version>0.1.0</project.version>
        <junit.version>4.9</junit.version>
        <axis2.version>1.7.4</axis2.version>
        <axis.version>1.4</axis.version>
        <spring.version>5.0.2.RELEASE</spring.version>
        <spring.boot.version>1.5.9.RELEASE</spring.boot.version>
        <aspectjweaver.version>1.7.1</aspectjweaver.version>
        <hibernate.version>5.2.11.Final</hibernate.version>
        <neo4j.version>3.3.1</neo4j.version>
        <spring.data.neo4j.version>5.0.2.RELEASE</spring.data.neo4j.version>
        <neo4j.java.driver.version>1.4.5</neo4j.java.driver.version>
        <neo4j-jdbc-version>3.1.0</neo4j-jdbc-version>
        <httpcomponents.version>4.3.6</httpcomponents.version>
        <tiles.version>2.2.2</tiles.version>
        <servlet.version>3.0-alpha-1</servlet.version>
        <servlet.jstl>1.2</servlet.jstl>
        <htrace.verion>3.0.4</htrace.verion>
        <dom4j.verion>1.6.1</dom4j.verion>
        <xmlbeans.version>2.4.0</xmlbeans.version>
        <ogm.version>2.1.2</ogm.version>
        <jackson.version>1.9.11</jackson.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.5</slf4j.version>
        <fileupload.version>1.2.2</fileupload.version>
        <mysql.version>5.1.21</mysql.version>
        <druid.version>0.2.9</druid.version>
        <fastjson.version>1.1.26</fastjson.version>
        <spring.hadoop.version>2.4.0.RELEASE</spring.hadoop.version>
        <org.jetbrains.version>15.0</org.jetbrains.version>
        <org.codehaus.jackson.version>1.8.5</org.codehaus.jackson.version>
        <axws-spring-version>1.9</axws-spring-version>
        <jaxws-rt-version>2.2.8</jaxws-rt-version>
        <hibernate-jpa-2.0-api-version>1.0.1.Final</hibernate-jpa-2.0-api-version>
        <titan.version>1.0.0</titan.version>
        <gremlin.version>3.0.1-incubating</gremlin.version>

        <!-- <<<<<<<<<<<<<<<<<<<< fi5.2 >>>>>>>>>>>>>>>>>>>>>>>>>>> -->
        <!--<hadoop.version>2.7.1</hadoop.version>
        <hbase.version>1.0.0</hbase.version>
        <hive.version>1.1.0</hive.version>
        <spark.version>1.3.0</spark.version>-->

        <!-- <<<<<<<<<<<<<<<<<<<< cdh5.7.1 >>>>>>>>>>>>>>>>>>>>>>>>>>> -->
       <!--<hadoop.version>2.6.0-cdh5.7.1</hadoop.version>
       <hbase.version>1.2.0-cdh5.7.1</hbase.version>
        <org.apache.phoenix.version>4.12.0-HBase-1.2</org.apache.phoenix.version>
       <hive.version>1.1.0-cdh5.7.1</hive.version>
       <spark.version>1.6.0-cdh5.7.1</spark.version>-->

        <!-- <<<<<<<<<<<<<<<<<<<<Master集群大数据相关最新版本组件>>>>>>>>>>>>>>>>>>>> -->
        <hadoop.version>2.7.4</hadoop.version>
        <hbase.version>1.3.1</hbase.version>
        <org.apache.phoenix.version>4.13.0-HBase-1.3</org.apache.phoenix.version>
        <hive.version>2.3.1</hive.version>
        <spark.version>2.2.0</spark.version>
        <zookeeper.version>3.4.9</zookeeper.version>

    </properties>

    <!-- maven打成war包放到tomcat目录下，即可运行 -->
    <build>
        <finalName>kshfx-parent-1.0.0</finalName>
        <plugins>
            <!-- github -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message>
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <branch>refs/heads/master</branch>
                    <includes>
                        <include>**/*</include>
                    </includes>
                   <!-- <path>com.sinobest.kshfx</path>-->
                    <!-- 是否与当前树合并，或者完全替换提交指向的树, 默认为false-->
                    <merge>true</merge>
                    <noJekyll>true</noJekyll>
                    <repositoryName>maven-repo</repositoryName>
                    <!-- 对应github上创建的仓库名称 name -->
                    <repositoryOwner>v4liulv</repositoryOwner>
                    <!-- github 仓库所有者 -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${jdk-version}</source>
                    <target>${jdk-version}</target>
                </configuration>
            </plugin>
            <!-- 生成sources源码包的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>create-source-jar</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 生成javadoc文档包的插件，解决报错添加-Xdoclint:none-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.2</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- ${project.build.directory}为Maven内置变量，缺省为target -->
            <!-- excludeTransitive表示是否不包含间接依赖的包  -->
            <!-- stripVersion表示复制的jar文件去掉版本信息 -->
           <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 打包全部的依赖类都打包到源代码中，需要注释掉maven-dependency-plugin和maven-jar-plugin的方式 -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.defonds.RsaEncryptor</mainClass>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>work</directory>
                        </fileset>
                        <fileset>
                            <directory>checkpoint</directory>
                        </fileset>
                        <fileset>
                            <directory>lib_managed</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 这个元素描述了所有与当前项目相关的依赖 -->
    <dependencies>
<!--maven打包编译java工具相关jar-->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.6</version>
        </dependency>
<!-- junit @test测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
<!-- oracle 开始  -->
        <dependency>
            <groupId>oracle</groupId>
            <artifactId>ojdbc61</artifactId>
            <version>11</version>
            <scope>system</scope>
            <systemPath>E:/workspace/lib/ojdbc/ojdbc6.jar</systemPath>
        </dependency>
<!-- servlet -->
      <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.version}</version>
            <!-- 解决tomcat中也有servlet-api包，发生了冲突，因为provided表明该包只在编译和测试的时候用 -->
            <!--<scope>provided</scope>-->
        </dependency>
<!-- jstl -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${servlet.jstl}</version>
        </dependency>
<!-- log4j -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
<!-- slf4j -->
       <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
<!-- fileupload 文件上传 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${fileupload.version}</version>
        </dependency>
<!-- fastJson json数组有关的 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
<!-- Jackson 把Java对象转换成 JSON 字串 -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
<!-- mysql数据库驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
<!-- druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
<!-- dom4j -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.verion}</version>
        </dependency>
<!-- http client -->
        <!--<dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>-->
    </dependencies>
    
    <!-- 指定maven仓库 -->
    <repositories>
        <!-- 我自己的GitHub版本库 -->
        <repository>
            <id>maven-repo-master</id>
            <url>https://github.com/v4liulv/maven-repo/tree/master</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <!-- 本地版本库 -->
        <repository>
            <id>maven-local</id>
            <url>D:\libs\maven\</url>
        </repository>
        <!-- 阿里巴巴发布版本仓库 -->
        <repository>
            <id>alibaba-opensource</id>
            <name>local private alibaba-opensource</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- cloudera CHD版本库 -->
        <repository>
            <id>mapreduce</id>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
        </repository>
        <!-- titan 版本库 -->
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- phonix 版本库-->
        <repository>
            <id>apache release</id>
            <url>https://repository.apache.org/content/repositories/releases/</url>
        </repository>
        <!-- spring 版本库 -->
        <repository>
            <id>spring-libs-snapshot</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/libs-snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>